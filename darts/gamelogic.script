
local globals = require( 'lib.GlobalVars' )
local myrandom = require( 'lib.RandomLetter' )
local deque = require( 'lib.deque' )


-- can use socket.gettime() too:
math.randomseed( os.time() )


-- global var defined in moleFactory.script
-- mole_objs[]

local lvl_period = {  5.0,  4.5,  4.0,  3.5,  3.0,  2.5 }

local colors = { 'balloon_blue', 'balloon_green', 'balloon_red', 'balloon_black', 'balloon_purple', 'balloon_aqua' }


function level_up( self )
	msg.post( '/basehud/hud', 'level_up' )
	self.level = self.level + 1
	if( self.level > 6 ) then
		self.level = 6
	end
	start_game( self )
end


function init(self)
	self.timer = 0
	self.current_timer = '100'
	self.active = false
	self.level = 1
	self.last_tgts = deque.new(20)
	self.balloon_objs = {}
	self.display_board = 1

	-- trigger the initial 'start-game' animation
	msg.post( '/basehud/hud', 'register', { script='/gamelogic#gamelogic', type='single' } )
	msg.post( '/basehud/hud', 'ready_go', {} )
	msg.post( '.', 'acquire_input_focus' )
	start_game( self )
	start_game( self )

	for i=0,11 do
		msg.post( '/bg_wood2#sprite'..i, 'play_animation', { id=hash('bg_wood_lt') } )
	end

end


function start_game(self)
	self.display_board = self.display_board%2 + 1
	print( 'gamelogic start_game  ', self.display_board )
	local n_colors = #colors
	local color_nums = {}
	for i=1,10 do
		color_nums[i] = (i-1)%n_colors + 1
	end
	myrandom.shuffle( color_nums )
	print( 'colors', color_nums )
	for i=1,10 do
		local ltr = myrandom.randomLetter()
		local color_num = (i-1)%n_colors + 1
		local obj = {
			letter = ltr,
			color = colors[ color_nums[i] ],
			-- obj = '/board' .. self.display_board .. '/balloon' .. ((self.display_board-1)*10+i),
			obj = '/balloon' .. ((self.display_board-1)*10+i),
			state = 'ready'
		}
		self.balloon_objs[i] = obj
		print('obj create', i, obj.obj, color_num, obj.color, obj.letter )
		msg.post( obj.obj, 'init', { letter=obj.letter, color=obj.color } )
	end
	if( self.display_board == 1 ) then
		go.animate( '/board1', 'position', go.PLAYBACK_ONCE_FORWARD, vmath.vector3(0,0,0), go.EASING_LINEAR, 0.5, 0 )
		go.animate( '/board2', 'position', go.PLAYBACK_ONCE_FORWARD, vmath.vector3(1024,0,0), go.EASING_LINEAR, 0.5, 0 )
	else
		go.animate( '/board1', 'position', go.PLAYBACK_ONCE_FORWARD, vmath.vector3(-1024,0,0), go.EASING_LINEAR, 0.5, 0 )
		go.animate( '/board2', 'position', go.PLAYBACK_ONCE_FORWARD, vmath.vector3(0,0,0), go.EASING_LINEAR, 0.5, 0 )
	end
	msg.post( '/timer', 'start' )
end


function end_of_game(self)
	if( self.active ) then
		-- trigger one mole to pop-up
		local m_down = {}
		for i=1,10 do
			if( self.balloon_state[i] == 'popped' ) then
				table.insert( m_down, i )
			end
		end

		if( #m_down > 0 ) then
			local rn = math.random(1,#m_down)
			local m_num = m_down[rn]
			-- give it a new random letter
			local ltr = myrandom.randomLetter()
			self.letters[m_num] = ltr
			msg.post( mole_objs[m_num], 'set_letter', { letter=ltr } )
			local uptime = lvl_uptime[self.level]
			local rt = math.random(1,uptime)
			msg.post( mole_objs[m_num], 'go_up', { duration=rt } )
			sound.play( '#sound_up' )
		end
	end
end


function on_message( self, message_id, message, sender )
	-- Add message-handling code here
	if( message_id == hash('game_start') ) then
		self.active = true
		start_game(self)
		print( 'timer should be', lvl_period[self.level] )
	elseif( message_id == hash('timer_done') ) then
		print('timer expired')
		msg.post( '/timer', 'stop' )
		if( self.active ) then
			msg.post( '/basehud/hud', 'game_over' )
		end
		self.active = false

	elseif( message_id == hash('game_over') ) then
		self.active = false
	elseif( message_id == hash('back_button') ) then
		self.active = false
		msg.post( '/timer', 'stop' )
		msg.post( '/basehud/hud', 'game_exit' )
	elseif( message_id == hash('final_exit') ) then
		self.active = false
		msg.post( 'loader:/go#loader', 'start_mainmenu' )
	else
		print('unknown message - '..message_id )
	end
end




function on_input( self, action_id, action )
	-- Add input-handling code here
	if( self.active and (action_id == hash('keypress')) ) then
		local letter_pressed = string.upper( action.text )
		local miss = true
		for i=1,10 do
			obj = self.balloon_objs[i]
			if( (letter_pressed==obj.letter) and (obj.state=='ready') ) then
				obj.state = 'popped'
				self.last_tgts:pushRight( 'hit' )
				msg.post( obj.obj, 'pop' )
				msg.post( '/basehud/hud', 'score', {score=5,mole_id=i,quiet=true} )
				miss = false
				break
			end
		end
		if( miss ) then
			msg.post( '/basehud/hud', 'missed', { pos=vmath.vector3(512, 0, 0.95) } )
			self.last_tgts:pushRight( 'miss' )
		end
		pop_count = 0
		for i=1,10 do
			obj = self.balloon_objs[i]
			if( obj.state == 'popped' ) then
				pop_count = pop_count + 1
			end
		end
		if( pop_count == 10 ) then
			level_up(self)
		end
	end
end

